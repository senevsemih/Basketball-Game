[Button]
private void ChangeBehaviourState(CharacterBehaviorState newState)
{
    if (_currentState == newState) return;

    _currentBehaviour?.Inactivate();

    Type type = null;
    switch (newState)
    {
        case CharacterBehaviorState.Idle:
            break;
        case CharacterBehaviorState.Pass:
            type = typeof(CharacterPassBehaviour);
            break;
        case CharacterBehaviorState.Shoot:
            type = typeof(CharacterShootBehaviour);
            break;
        default:
            throw new ArgumentOutOfRangeException(nameof(newState), newState, null);
    }

    var findBehaviour = Array.Find(_behaviours, behaviour => behaviour.GetType().IsAssignableFrom(type));
    _currentBehaviour = findBehaviour;

    _currentState = newState;
    _currentBehaviour?.Activate();
}